<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="top.xiesen.video.mapper.VideoMapper" >

<select id="selectVideoCount" resultType="int" parameterType="String">
	SELECT count(*)
	FROM video v LEFT JOIN course c ON v.course_id = c.id 
	LEFT JOIN speaker s ON v.speaker_id = s.id 
	<where>
		<if test="video_title != null">
			v.video_title LIKE '%' #{video_title} '%'
		</if>
		<if test="speaker_name != null and speaker_name != '' ">
			AND s.speaker_name = #{speaker_name}
		</if>
		<if test="course_name != null and course_name != '' ">
			AND c.course_name = #{course_name}
		</if>
	</where>
		
	
</select>
 
 <select id="selectVideo" resultType="Video" parameterType="String">
 	SELECT v.*,s.speaker_name,c.course_name
	FROM video v LEFT JOIN course c ON v.course_id = c.id 
	LEFT JOIN speaker s ON v.speaker_id = s.id 
	<where>
		<if test="video_title != null">
			v.video_title LIKE '%' #{video_title} '%'
		</if>
		<if test="speaker_name != null and speaker_name != '' ">
			AND s.speaker_name = #{speaker_name}
		</if>
		<if test="course_name != null and course_name != '' ">
			AND c.course_name = #{course_name}
		</if>
	</where>
	
	limit #{page},5
 </select>
 
 <insert id="insertVideo" parameterType="Video">
 	insert into video (video_title,speaker_id,course_id,video_length,video_image_url,video_url,video_descr,insert_time,video_play_times)
 	values(#{video_title},#{speaker_id},#{course_id},#{video_length},#{video_image_url},#{video_url},#{video_descr},#{insert_time},#{video_play_times})
 </insert>
 
 <delete id="deleteBatch" parameterType="int">
 	delete from video where id = #{deleteid}
 </delete>
 
 <select id="selectVideoById" parameterType="int" resultType="Video">
 	SELECT v.*,s.speaker_name,c.course_name
	FROM video v LEFT JOIN course c ON v.course_id = c.id 
	LEFT JOIN speaker s ON v.speaker_id = s.id where v.id = #{0}
 </select>
 
 <update id="updateVideo" parameterType="Video">
 	update video set video_title = #{video_title},speaker_id = #{speaker_id},course_id = #{course_id},video_length= #{video_length},
 	video_image_url = #{video_image_url}, video_url = #{video_url},video_descr = #{video_descr},update_time = #{update_time}
 	where id = #{id}
 </update>
 
 <select id="selectAllVideo"  resultType="Video">
 	<!-- SELECT * FROM video limit 0,5 -->
 	SELECT c.course_name ,avg(v.video_play_times) avg FROM video v RIGHT JOIN course c ON c.id = v.course_id GROUP BY v.course_id;
 </select>
	
	<select id="selectVideoInId" parameterType="String" resultType="Video">
		SELECT v.*,c.* FROM video v LEFT JOIN course c ON c.id =v.course_id  WHERE c.id IN (SELECT c.id FROM course WHERE  c.subject_id = 1);
	</select>

<resultMap id="RM_video" type="video">
	<id column="id" property="id"></id>
	<result column="video_title" property="video_title" jdbcType="VARCHAR" />
	<result column="speaker_id" property="speaker_id" jdbcType="INTEGER" />
	<result column="course_id" property="course_id" jdbcType="INTEGER" />
	<result column="video_length" property="video_length" jdbcType="INTEGER" />
	<result column="video_image_url" property="video_image_url" jdbcType="VARCHAR" />
	<result column="video_url" property="video_url" jdbcType="VARCHAR" />
	<result column="video_descr" property="video_descr" jdbcType="VARCHAR" />
	<result column="insert_time" property="insert_time" jdbcType="TIMESTAMP" />
	<result column="update_time" property="update_time" jdbcType="TIMESTAMP" />
	<result column="video_play_times" property="video_play_times" jdbcType="INTEGER" />
	<result column="speaker_name" property="speaker_name" jdbcType="VARCHAR" />
	<result column="course_name" property="course_name" jdbcType="VARCHAR" />
	<result column="avg" property="avg" jdbcType="DOUBLE" />
</resultMap>

	<select id="selectVideoByCourse" parameterType="Integer" resultMap="RM_video">
		select v.*,speaker_name from video v,speaker s WHERE v.speaker_id = s.id and course_id = #{0}
	</select>

	<update id="updateVideoPlayTimes" parameterType="int">
		UPDATE video SET video_play_times = #{0} WHERE id = #{1}
	</update>
</mapper>